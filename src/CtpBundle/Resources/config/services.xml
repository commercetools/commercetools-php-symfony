<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <service id="commercetools" synthetic="true" />
        <service id="GuzzleHttp\Client" alias="commercetools.api.client" />
        <service id="Commercetools\Core\Client\ApiClient" alias="commercetools.api.client" />
        <service id="commercetools.api.client" class="GuzzleHttp\Client">
            <factory service="commercetools.client.factory" method="build" />
        </service>
        <service id="commercetools.client.factory" class="Commercetools\Symfony\CtpBundle\Service\ClientFactory">
            <argument type="service" id="commercetools.client.config" />
            <argument type="service" id="commercetools.context.factory" />
            <argument type="service" id="commercetools.cache" />
            <argument type="service" id="commercetools.locale.converter" />
            <argument type="service" id="commercetools.logger" />
            <argument type="service" id="commercetools.profiler.extension" on-invalid="null"/>
        </service>
        <service id="commercetools.context.factory" class="Commercetools\Symfony\CtpBundle\Service\ContextFactory">
            <argument>%commercetools.fallback_languages%</argument>
            <argument type="service" id="commercetools.locale.converter" />
            <argument>%commercetools.defaults.context%</argument>
        </service>
        <service id="commmercetools.mapper.factory" class="Commercetools\Symfony\CtpBundle\Service\MapperFactory">
            <argument type="service" id="commercetools.context.factory"/>
        </service>
        <service id="commercetools.client.handlerstack" class="GuzzleHttp\HandlerStack">
            <factory service="Commercetools\Symfony\CtpBundle\Service\HandlerStackFactory" method="create"/>
            <argument type="service" id="Guzzle\HandlerStack"  on-invalid="null"/>
            <argument type="service" id="commercetools.profiler.extension" on-invalid="null"/>
        </service>
        <service id="commercetools.client.config" class="Commercetools\Core\Config">
            <factory class="Commercetools\Symfony\CtpBundle\Service\ConfigFactory" method="create"/>
            <argument>%commercetools.client.config%</argument>
            <argument type="service" id="commercetools.client.handlerstack" />
            <argument type="service" id="commercetools.logger" />
            <argument>%kernel.debug%</argument>
        </service>
        <service id="commercetools.cache" parent="cache.app">
            <tag name="cache.pool" />
        </service>
        <service id="commercetools.locale.converter" class="Commercetools\Symfony\CtpBundle\Service\LocaleConverter">
            <argument>%commercetools.defaults.country%</argument>
        </service>
        <service id="commercetools.logger" class="Commercetools\Symfony\CtpBundle\Logger\Logger">
            <argument type="service" id="logger" />
            <tag name="monolog.logger" channel="commercetools" />
        </service>
        <service id="commercetools.profile" class="Commercetools\Symfony\CtpBundle\Profiler\Profile" />
        <service id="data_collector.ctp" class="Commercetools\Symfony\CtpBundle\DataCollector\CommercetoolsDataCollector" public="false">
            <tag name="data_collector" id="commercetools" template="@Ctp/Collector/commercetools"/>
            <argument type="service" id="commercetools.profile" />
        </service>
        <service id="Commercetools\Symfony\CtpBundle\Model\Repository" public="true">
            <argument key="$enableCache">false</argument>
            <argument key="$cache" type="service" id="commercetools.cache" />
            <argument key="$client" type="service" id="Commercetools\Core\Client\ApiClient"/>
            <argument key="$mapperFactory" type="service" id="commmercetools.mapper.factory" />
            <argument key="$contextFactory" type="service" id="commercetools.context.factory" />
        </service>

        <service id="commercetools.client.me.handlerstack" class="GuzzleHttp\HandlerStack">
            <factory service="Commercetools\Symfony\CtpBundle\Service\HandlerStackFactory" method="create"/>
            <argument type="service" id="Guzzle\HandlerStack"  on-invalid="null"/>
            <argument type="service" id="commercetools.profiler.extension" on-invalid="null"/>
        </service>

        <service id="Commercetools\Symfony\CtpBundle\Service\HandlerStackFactory" />

        <service id="commercetools.custom_types" class="Commercetools\Symfony\CtpBundle\Service\CustomTypeProvider" public="true">
            <factory method="build" class="Commercetools\Symfony\CtpBundle\Service\CustomTypeProviderFactory"/>
            <argument>%commercetools.custom_types%</argument>
        </service>
        <service id="Commercetools\Symfony\CtpBundle\Service\CustomTypeProvider" alias="commercetools.custom_types"/>

        <service id="commercetools.http.clientfactory" class="Commercetools\Core\Client\ClientFactory">
            <factory class="Commercetools\Core\Client\ClientFactory" method="of"/>
        </service>

        <service id="commercetools.oauth.client" class="GuzzleHttp\Client"/>

        <service id="commercetools.client.me.config" class="Commercetools\Core\Config">
            <factory class="Commercetools\Symfony\CtpBundle\Service\ConfigFactory" method="create"/>
            <argument>%commercetools.client.config%</argument>
            <argument type="service" id="commercetools.client.me.handlerstack" />
            <argument type="service" id="commercetools.logger" />
        </service>

        <service id="commeretoools.client.me" class="GuzzleHttp\Client">
            <factory service="commercetools.http.clientfactory" method="createClient"/>
            <argument type="service" id="commercetools.client.me.config" />
            <argument type="service" id="commercetools.logger" />
            <argument type="service" id="commercetools.cache" />
            <argument type="service" id="Commercetools\Core\Client\OAuth\TokenStorageProvider" />
        </service>

        <service id="Commercetools\Symfony\CtpBundle\Service\SessionTokenStorage">
            <argument id="session" type="service"/>
        </service>

        <service id="commercetools.http.providerfactory" class="Commercetools\Core\Client\ProviderFactory" />

        <service id="Commercetools\Core\Client\OAuth\TokenStorageProvider">
            <factory service="commercetools.http.providerfactory" method="createTokenStorageProviderFor" />
            <argument type="service" id="commercetools.client.me.config"/>
            <argument type="service" id="commercetools.oauth.client" />
            <argument type="service" id="Commercetools\Symfony\CtpBundle\Service\SessionTokenStorage"/>
        </service>

        <service id="Commercetools\Core\Client\OAuth\PasswordFlowTokenProvider">
            <factory service="commercetools.http.providerfactory" method="createPasswordFlowProviderFor" />
            <argument type="service" id="commercetools.client.me.config"/>
            <argument type="service" id="commercetools.oauth.client"/>
            <argument type="service" id="Commercetools\Symfony\CtpBundle\Service\SessionTokenStorage" />
        </service>

        <service id="Commercetools\Symfony\CtpBundle\Model\MeRepository" public="true">
            <argument key="$enableCache">false</argument>
            <argument key="$cache" type="service" id="commercetools.cache" />
            <argument key="$client" type="service" id="commeretoools.client.me"/>
            <argument key="$mapperFactory" type="service" id="commmercetools.mapper.factory" />
            <argument key="$contextFactory" type="service" id="commercetools.context.factory" />
        </service>
    </services>
</container>
